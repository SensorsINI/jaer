# this logging configuration is used by jAER when running the application by specifying
# -Djava.util.logging.config.file=conf/Logging.properties in the java machine invocation

# Specify the handlers to create in the root logger

# Set the default logging level for the root logger, e.g. WARNING INFO, FINE, FINER, FINEST
# This filters all subsequent levels so set to FINEST and then filter out later
.level = INFO

# Set the default logging level for new ConsoleHandler and FileHandler instances
# set the level of the ConsoleHandler to the level you want to see at console.
# Its formatter is set below at line 34
java.util.logging.ConsoleHandler.level = INFO
java.util.logging.FileHandler.level = WARNING
net.sf.jaer.graphics.AEViewerLoggingHandler=INFO

# (all loggers are children of the root logger)
# The following creates two handlers
# handlers = java.util.logging.FileHandler, java.util.logging.ConsoleHandler
# handlers = java.util.logging.FileHandler
handlers = java.util.logging.ConsoleHandler


# The following special tokens can be used in the pattern property
# which specifies the location and name of the log file.
#   / - standard path separator
#   %t - system temporary directory
#   %h - value of the user.home system property (home folder, e.g. c:\Users\<username>\ or /home/<username>)
#   %g - generation number for rotating logs
#   %u - unique number to avoid conflicts
java.util.logging.FileHandler.pattern=%t/jAER-%g.log

# Set the default formatter for new ConsoleHandler instances
#java.util.logging.ConsoleHandler.formatter = net.sf.jaer.util.JAERConsoleLoggingFormatter
java.util.logging.FileHandler.formatter = java.util.logging.SimpleFormatter
java.util.logging.ConsoleHandler.formatter = net.sf.jaer.util.LoggingAnsiColorConsoleFormatter

# Set the default logging level for the logger named com.mycompany
#com.mycompany.level = ALL
